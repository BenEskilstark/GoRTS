
  - playtest:


  - bugs:
    - can either go negative when clicking and dragging
      or will diverge if client doesn't respect it
    - numConnectedClients is wrong
      either how it's accounted or clients aren't disconnecting


  - open issues:
    - handle other player disconnecting (game freezes)

    - tabbing away pauses the socket and messes with avg TR
      -  could have a timeout where the server ends your turn for you


  - alternate server models:
    - try running it on the server entirely (w/ roundtrip actions) just to
      see how it feels/profiles
    - have the server count the turns
      - have queues on the server for each client's actions and dispatch them
        on that client's turn.
      - but do you need a queue at all at that point? Couldn't there still be
        race conditions?
      - could use a CRDT-like that sends turn with all actions and first-write wins
        (but need to ensure all state is mergeable)
    - serialize state and send with END_TURN.
      - All other actions only happen on client
      - whenever you receive END_TURN, then deserialize the state that comes with it
        (ignore any state sent like this from a turn before your own(?))
      - if you took no actions on your turn, then could send empty state
      - this could allow switching to a server model by dispatching actions to
        server, END_TURN going empty, and then the server sending serialized
        state when it sends END_TURN
      - (de)serialization doesn't scale well...


  - more interesting game mechanics:
